syntax = "proto3";

package protos;

service Benchmarks{
 rpc track_objects(Request) returns (DetectionTrackingResponse) {}
 rpc detect_objects(Request) returns (DetectionTrackingResponse) {}
 rpc start_memory_tracing(EmptyProto) returns (EmptyProto) {}
 rpc get_cpu_trace(EmptyProto) returns (CPUTrace) {}
 rpc get_memory_usage(EmptyProto) returns (MemoryTrace) {}
 rpc stress_cpu(CPUStressRequest) returns (EmptyProto) {}
}

message Request{
 string image = 1;
 int64 frame_id = 2;
 int64 request_time_ms = 3;
}

message CPUStressRequest{
 int32 cpu_cores = 1;
 int32 time_ms = 2;
}

message DetectionTrackingResponse{
 int64 frame_id = 1;
 int64 request_time_ms = 2;
 int64 request_received_time_ms = 3;
 int64 response_time_ms = 4;
 int64 response_received_time_ms = 5;
 repeated DetectedTrackedObject detected_objects = 6;
}

message DetectedTrackedObject {
  int32 track_id = 1;
  string clazz = 2;
  int32 x_min = 3;
  int32 x_max = 4;
  int32 y_min = 5;
  int32 y_max = 6;
}

message CPUTrace {
  float cpu_load = 1;
}

message MemoryTrace {
  float current_memory_mb = 1;
  float peak_memory_mb = 2;
}

message EmptyProto {}
